// This file was auto-generated by ML.NET Model Builder. 

using Microsoft.ML;
using Microsoft.ML.Data;

public class MLModel
{
    private static readonly string MLNetModelPath = $@"{(string)AppDomain.CurrentDomain.GetData("ContentRootPath")!}/MLModel/MLModel.zip";

    public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine =
        new(() => CreatePredictEngine(), true);

    /// <summary>
    ///     Use this method to predict on <see cref="ModelInput" />.
    /// </summary>
    /// <param name="input">model input.</param>
    /// <returns>
    ///     <seealso cref=" ModelOutput" />
    /// </returns>
    public static ModelOutput Predict(ModelInput input)
    {
        var predEngine = PredictEngine.Value;
        return predEngine.Predict(input);
    }

    private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
    {
        var mlContext = new MLContext();
        var mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
        return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
    }

    /// <summary>
    ///     model input class for MLModel.
    /// </summary>

    #region model input class

    public class ModelInput
    {
        [ColumnName(@"Label")] public string Label { get; set; }

        [ColumnName(@"ImageSource")] public string ImageSource { get; set; }
    }

    #endregion

    /// <summary>
    ///     model output class for MLModel.
    /// </summary>

    #region model output class

    public class ModelOutput
    {
        [ColumnName("PredictedLabel")] public string Prediction { get; set; }

        public float[] Score { get; set; }
    }

    #endregion
}